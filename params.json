{"name":"Safety Razor","tagline":"A Ruby client for the Razor API","body":"[![Gem Version](https://badge.fury.io/rb/safety_razor.png)](http://badge.fury.io/rb/safety_razor)\r\n[![Build Status](https://travis-ci.org/blueboxgroup/safety_razor.png?branch=master)](https://travis-ci.org/blueboxgroup/safety_razor)\r\n[![Code Climate](https://codeclimate.com/github/blueboxgroup/safety_razor.png)](https://codeclimate.com/github/blueboxgroup/safety_razor)\r\n[![Dependency Status](https://gemnasium.com/blueboxgroup/safety_razor.png)](https://gemnasium.com/blueboxgroup/safety_razor)\r\n\r\nThere are 2 overriding design decisions at play in this library:\r\n\r\n1. Implement a solution using the\r\n   [Faraday gem](https://github.com/lostisland/faraday) to support\r\n   middleware injection such as additional authentication, rety logic, etc.\r\n2. Provide a thin wrapper around Razor's REST API that doesn't hide data\r\n   internals. At the time of authoring this library Razor has not yet hit a\r\n   SemVer-stable release and could therefore change internals at any time.\r\n\r\n## <a name=\"installation\"></a> Installation\r\n\r\nAdd this line to your application's Gemfile:\r\n\r\n    gem 'safety_razor'\r\n\r\nAnd then execute:\r\n\r\n    $ bundle\r\n\r\nOr install it yourself as:\r\n\r\n    $ gem install safety_razor\r\n\r\n## <a name=\"usage\"></a> Usage\r\n\r\n### <a name=\"usage-active-model\"></a> Active Model\r\n\r\n* Razor\r\n  [active_model](https://github.com/puppetlabs/Razor/wiki/active_model)\r\n  documentation\r\n\r\n```ruby\r\nrequire 'safety_razor'\r\n\r\nclient = SafetyRazor::Client.new(uri: 'http://10.0.10.1')\r\n\r\n# GET /active_model/{UUID}\r\nclient.active_model.get(\"uuid1-xxxx\")\r\n\r\n# GET /active_model\r\nclient.active_model.all\r\n\r\n# DELETE /active_model/{UUID}\r\nclient.active_model.destroy(\"uuid1-xxxx\")\r\n```\r\n\r\n### <a name=\"usage-broker\"></a> Broker\r\n\r\n* Razor\r\n  [broker](https://github.com/puppetlabs/Razor/wiki/broker)\r\n  documentation\r\n\r\n```ruby\r\nrequire 'safety_razor'\r\n\r\nclient = SafetyRazor::Client.new(uri: 'http://10.0.10.1')\r\n\r\n# POST /broker?json_hash=(JSON_STR)\r\nclient.broker.create({\r\n  name: \"Chefy\",\r\n  plugin: \"chef\",\r\n  description: \"Production Chef Server\",\r\n  req_metadata_hash: {\r\n    chef_server_url: \"https://chef.example.com\",\r\n    chef_version: \"11.4.0\",\r\n    validation_key: \"-----BEGIN RSA PRIVATE KEY-----\\nMIIEogIBAAK...\"\r\n  }\r\n})\r\n\r\n# GET /broker/{UUID}\r\nclient.broker.get(\"uuid1-xxxx\")\r\n\r\n# GET /broker\r\nclient.broker.all\r\n\r\n# GET /broker/plugins\r\nclient.broker.plugins\r\n\r\n# PUT /broker/{UUID}?json_hash=(JSON_STR)\r\nclient.broker.update({\r\n  uuid: \"uuid1-xxxx\",\r\n  name: \"Production Chef Server\"\r\n})\r\n\r\n# DELETE /broker/{UUID}\r\nclient.broker.destroy(\"uuid1-xxxx\")\r\n\r\nbroker = client.broker.get(\"uuid1-xxxx\")\r\nclient.broker.destroy(broker)\r\n```\r\n\r\n### <a name=\"usage-model\"></a> Model\r\n\r\n* Razor\r\n  [model](https://github.com/puppetlabs/Razor/wiki/model)\r\n  documentation\r\n\r\n```ruby\r\nrequire 'safety_razor'\r\n\r\nclient = SafetyRazor::Client.new(uri: 'http://10.0.10.1')\r\n\r\n# POST /model?json_hash=(JSON_STR)\r\nclient.model.create({\r\n  label: \"Test Model\",\r\n  image_uuid: \"OTP\",\r\n  template: \"ubuntu_oneirc\",\r\n  req_metadata_hash: {\r\n    hostname_prefix: \"test\",\r\n    domainname: \"testdomain.com\",\r\n    root_password: \"test4321\"\r\n  }\r\n})\r\n\r\n# GET /model/{UUID}\r\nclient.model.get(\"uuid1-xxxx\")\r\n\r\n# GET /model\r\nclient.model.all\r\n\r\n# GET /model/templates\r\nclient.model.templates\r\n\r\n# PUT /model/{UUID}?json_hash=(JSON_STR)\r\nclient.model.update({\r\n  uuid: \"uuid1-xxxx\",\r\n  label: \"New Test Model Label\"\r\n})\r\n\r\n# DELETE /model/{UUID}\r\nclient.model.destroy(\"uuid1-xxxx\")\r\n```\r\n\r\n### <a name=\"usage-node\"></a> Node\r\n\r\n* Razor\r\n  [node](https://github.com/puppetlabs/Razor/wiki/node)\r\n  documentation\r\n\r\n```ruby\r\nrequire 'safety_razor'\r\n\r\nclient = SafetyRazor::Client.new(uri: 'http://10.0.10.1')\r\n\r\n# POST /node/register?[registration_param_list]\r\nclient.node.register({\r\n  hw_id: \"000C29291C95\",\r\n  last_state: \"idle\",\r\n  attributes_hash: {\r\n    attr1: \"val1\"\r\n  }\r\n})\r\n\r\n# POST /node/checkin?[checkin_param_list]\r\nclient.node.checkin({\r\n  hw_id: \"000C29291C95\",\r\n  last_state: \"idle\"\r\n})\r\n\r\n# GET /node/{UUID}\r\nclient.node.get(\"uuid1-xxxx\")\r\n\r\n# GET /node/{UUID}?field=attributes\r\nclient.node.get_attributes(\"uuid1-xxxx\")\r\n\r\n# GET /node/{UUID}?field=hardware_ids\r\nclient.node.get_hardware_ids(\"uuid1-xxxx\")\r\n\r\n# GET /node\r\nclient.node.all\r\n```\r\n\r\n### <a name=\"usage-policy\"></a> Policy\r\n\r\n* Razor\r\n  [policy](https://github.com/puppetlabs/Razor/wiki/policy)\r\n  documentation\r\n\r\n```ruby\r\nrequire 'safety_razor'\r\n\r\nclient = SafetyRazor::Client.new(uri: 'http://10.0.10.1')\r\n\r\n# POST /policy?json_hash=(JSON_STR)\r\nclient.policy.create({\r\n  label: \"Test Policy\",\r\n  model_uuid: \"uuid2-yyyy\",\r\n  template: \"linux_deploy\",\r\n  tags: \"two_disks,memsize_1GiB,nics_2\"\r\n})\r\n\r\n# GET /policy/{UUID}\r\nclient.policy.get(\"uuid1-xxxx\")\r\n\r\n# GET /policy\r\nclient.policy.all\r\n\r\n# GET /policy/templates\r\nclient.policy.templates\r\n\r\n# PUT /policy/{UUID}?json_hash=(JSON_STR)\r\nclient.policy.update({\r\n  uuid: \"uuid1-xxxx\",\r\n  tags: \"one,two,three\"\r\n})\r\n\r\n# DELETE /policy/{UUID}\r\nclient.policy.destroy(\"uuid1-xxxx\")\r\n\r\npolicy = client.policy.get(\"uuid1-xxxx\")\r\nclient.policy.destroy(policy)\r\n```\r\n\r\n### <a name=\"usage-tag\"></a> Tag\r\n\r\n* Razor\r\n  [tag](https://github.com/puppetlabs/Razor/wiki/tag)\r\n  documentation\r\n\r\n```ruby\r\nrequire 'safety_razor'\r\n\r\nclient = SafetyRazor::Client.new(uri: 'http://10.0.10.1')\r\n\r\n# POST /tag?json_hash=(JSON_STR)\r\nclient.tag.create({\r\n  name: \"Test Tag\",\r\n  tag: \"test_tag\"\r\n})\r\n\r\n# GET /tag/{UUID}\r\nclient.tag.get(\"uuid1-xxxx\")\r\n\r\n# GET /tag\r\nclient.tag.all\r\n\r\n# PUT /tag/{UUID}?json_hash=(JSON_STR)\r\nclient.tag.update({\r\n  uuid: \"uuid1-xxxx\",\r\n  tag: \"prod_tag\"\r\n})\r\n\r\n# DELETE /tag/{UUID}\r\nclient.tag.destroy(\"uuid1-xxxx\")\r\n\r\ntag = client.tag.get(\"uuid1-xxxx\")\r\nclient.tag.destroy(tag)\r\n```\r\n\r\n### <a name=\"usage-tag-matcher\"></a> Tag Matcher\r\n\r\n* Razor\r\n  [tag](https://github.com/puppetlabs/Razor/wiki/tag)\r\n  documentation (contains tag matcher details)\r\n\r\n```ruby\r\nrequire 'safety_razor'\r\n\r\nclient = SafetyRazor::Client.new(uri: 'http://10.0.10.1')\r\n\r\n# POST /tag/{T_UUID}/matcher?json_hash=(JSON_STR)\r\nclient.tag_matcher.create(\"uuid1-xxxx\", {\r\n  key: \"mk_hw_nic_count\",\r\n  compare: \"equal\",\r\n  value: \"2\"\r\n})\r\n\r\n# GET /tag/{T_UUID}/matcher/{UUID}\r\n# get(tag_uuid, tag_matcher_uuid)\r\nclient.tag_matcher.get(\"uuid1-xxxx\", \"uuid2-yyyy\")\r\n\r\n# PUT /tag/{T_UUID}/matcher/{UUID}?json_hash=(JSON_STR)\r\nclient.tag_matcher.update(\"uuid1-xxxx\", {\r\n  uuid: \"uuid2-yyyy\",\r\n  key: \"mk_special_sauce\"\r\n})\r\n\r\n# DELETE /tag/{T_UUID}/matcher/{UUID}\r\nclient.tag_matcher.destroy(\"uuid1-xxxx\", \"uuid2-yyyy\")\r\n```\r\n\r\n## <a name=\"testing\"></a> Testing\r\n\r\nTo run the unit tests and quality suite:\r\n\r\n    ./script/bootstrap\r\n    rake\r\n\r\nThe acceptance suite requires a Razor service, therefore this projects ships\r\nwith a Vagrant VM providing a Razor instance. To run the acceptance suite:\r\n\r\n    ./script/bootstrap\r\n    vagrant up\r\n    rake acceptance\r\n    vagrant destroy\r\n\r\n## <a name=\"development\"></a> Development\r\n\r\n* Source hosted at [GitHub][repo]\r\n* Report issues/questions/feature requests on [GitHub Issues][issues]\r\n\r\nPull requests are very welcome! Make sure your patches are well tested.\r\nIdeally create a topic branch for every separate change you make. For\r\nexample:\r\n\r\n1. Fork the repo\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Added some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create new Pull Request\r\n\r\n## <a name=\"authors\"></a> Authors\r\n\r\nCreated by [Fletcher Nichol][fnichol] (<fnichol@nichol.ca>), and maintained\r\nby [Blue Box Group][bluebox].\r\n\r\n## <a name=\"license\"></a> License\r\n\r\nMIT (see [LICENSE][license])\r\n\r\n[bluebox]:      http://bluebox.net\r\n[fnichol]:      https://github.com/fnichol\r\n[license]:      https://github.com/blueboxgroup/safety_razor/blob/master/LICENSE\r\n[repo]:         https://github.com/blueboxgroup/safety_razor\r\n[issues]:       https://github.com/blueboxgroup/safety_razor/issues\r\n[contributors]: https://github.com/blueboxgroup/safety_razor/contributors\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}